(this.webpackJsonpfsui=this.webpackJsonpfsui||[]).push([[10],{124:function(t,s,i){var o=i(145);"string"==typeof o&&(o=[[t.i,o,""]]);var a={hmr:!0,transform:void 0,insertInto:void 0};i(40)(o,a);o.locals&&(t.exports=o.locals)},144:function(t,s,i){"use strict";var o=i(124);i.n(o).a},145:function(t,s,i){(t.exports=i(39)(!1)).push([t.i,"\n.loading-demo .fs-grid[data-v-edf4a1c6]::after,\n.loading-demo .fs-grid-item[data-v-edf4a1c6]::after {\n  border: none;\n}\n",""])},165:function(t,s,i){"use strict";i.r(s);var o=function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"loading-demo"},[s("fs-group",{attrs:{title:"基本loading"}},[s("fs-grid",{attrs:{clos:2}},[s("fs-grid-item",[s("fs-loading")],1),s("fs-grid-item",[s("fs-loading",{attrs:{type:"spinner"}})],1)],1)],1),s("fs-group",{attrs:{title:"带背景的loading"}},[s("fs-grid",{attrs:{clos:2}},[s("fs-grid-item",[s("fs-loading",{attrs:{color:"white"}})],1),s("fs-grid-item",[s("fs-loading",{attrs:{type:"spinner",color:"white"}})],1)],1)],1),s("fs-group",{attrs:{title:"改变大小的loading"}},[s("fs-grid",{attrs:{clos:2}},[s("fs-grid-item",[s("fs-loading",{attrs:{size:"30px"}})],1),s("fs-grid-item",[s("fs-loading",{attrs:{type:"spinner",size:"30px"}})],1),s("fs-grid-item",[s("fs-loading",{attrs:{size:"30px",color:"white"}})],1),s("fs-grid-item",[s("fs-loading",{attrs:{type:"spinner",size:"30px",color:"white"}})],1)],1)],1),s("fs-group",{attrs:{title:"带文字的loading"}},[s("fs-grid",{attrs:{clos:2}},[s("fs-grid-item",[s("fs-loading",{attrs:{color:"white",text:"加载中..."}})],1),s("fs-grid-item",[s("fs-loading",{attrs:{color:"white",type:"spinner",text:"加载中..."}})],1)],1)],1),s("fs-group",{attrs:{title:"自定义类名"}},[s("fs-loading",{attrs:{className:"self-loading"}})],1),s("fs-group",{attrs:{title:"自定义内容"}},[s("fs-grid",{attrs:{clos:2}},[s("fs-grid-item",[s("fs-loading",[s("div",{attrs:{slot:"content"},slot:"content"},[this._v("loading")])])],1),s("fs-grid-item",[s("fs-loading",[s("div",{attrs:{slot:"loading"},slot:"loading"},[s("span",[this._v("loading")])])])],1),s("fs-grid-item",[s("fs-loading",{attrs:{color:"white",text:"加载中..."}},[s("div",{attrs:{slot:"loading"},slot:"loading"},[s("p",{staticStyle:{color:"white"}},[this._v("图片")])])])],1),s("fs-grid-item",[s("fs-loading",{attrs:{color:"white",text:"加载中..."}},[s("div",{attrs:{slot:"loading"},slot:"loading"},[s("span",{staticStyle:{color:"white"}},[this._v("图片")])])])],1)],1)],1)],1)};o._withStripped=!0;var a={name:"loading-demo",methods:{setLoading:function(t){console.log(t)}}},r=(i(144),i(0)),e=Object(r.a)(a,o,[],!1,null,"edf4a1c6",null);e.options.__file="packages/loading/demo/index.vue";s.default=e.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,