(this.webpackJsonpfsui=this.webpackJsonpfsui||[]).push([[24],{158:function(t,o,s){"use strict";s.r(o);var n=function(){var t=this,o=t.$createElement,s=t._self._c||o;return s("div",[s("fs-group",{attrs:{title:"alert"}},[s("fs-button",{on:{click:function(o){t.dialog({title:"提示",message:"单行提示"})}}},[t._v("\n        消息提示-单行\n      ")]),s("fs-button",{staticClass:"mgl15",on:{click:function(o){t.dialog({title:"提示",message:"说明当前状态、提示用户解决方案，最好不要超过两行。"})}}},[t._v("\n        消息提示-多行\n      ")])],1),s("fs-group",{attrs:{title:"confirm"}},[s("fs-button",{on:{click:function(o){t.dialog({type:"confirm",message:"说明当前状态、提示用户解决方案，最好不要超过两行。"})}}},[t._v("确认")]),s("fs-button",{staticClass:"mgl15",on:{click:function(o){t.dialog({type:"confirm",title:"提示",message:"消息提示"})}}},[t._v("确认-单行")]),s("fs-button",{staticClass:"mgl15",on:{click:function(o){t.dialog({type:"confirm",title:"提示",message:"说明当前状态、提示用户解决方案，最好不要超过两行。"})}}},[t._v("\n        确认-多行\n      ")])],1),s("fs-group",{attrs:{title:"居左"}},[s("fs-button",{on:{click:function(o){t.dialog({title:"提示",align:"left",message:"说明当前状态、提示用户解决方案，最好不要超过两行。"})}}},[t._v("\n        消息提示-多行\n      ")]),s("fs-button",{staticClass:"mgl15",on:{click:function(o){t.dialog({type:"confirm",align:"left",title:"提示",message:"说明当前状态、提示用户解决方案，最好不要超过两行。"})}}},[t._v("\n      消息确认\n      ")])],1),s("fs-group",{attrs:{title:"高级用法"}},[s("fs-button",{on:{click:t.highDialog}},[t._v("消息确认")]),s("fs-button",{staticStyle:{"margin-left":"15px"},on:{click:t.prefixDialog}},[t._v("图片前缀")])],1),s("fs-dialog",{model:{value:t.show,callback:function(o){t.show=o},expression:"show"}},[s("fs-input",{attrs:{label:"用户名",placeholder:"请输入用户名"},model:{value:t.val2,callback:function(o){t.val2=o},expression:"val2"}},[s("span",{staticClass:"fs-input-prefix",attrs:{slot:"prefix"},slot:"prefix"},[s("i",{staticClass:"red"},[t._v("*")])])]),s("fs-input",{attrs:{type:"password"},model:{value:t.val3,callback:function(o){t.val3=o},expression:"val3"}})],1),s("fs-dialog",{attrs:{title:"标题单行",type:"alert",message:"说明当前状态、提示用户解决方案，最好不要超过两行。"},model:{value:t.show2,callback:function(o){t.show2=o},expression:"show2"}},[s("div",{staticClass:"dialog-prefix",attrs:{slot:"prefix"},slot:"prefix"},[s("span",{staticClass:"dialog-close",on:{click:function(o){t.show2=!1}}},[s("fs-icon",{attrs:{name:"error"}})],1),s("img",{attrs:{src:"https://dummyimage.com/600x400/000/fff",alt:"",width:"60%"}})])]),s("fs-dialog",{attrs:{align:"left",title:"自定义footer",message:"描述文字的字数尽量控制在三行\n内，并且单行最右侧尽量不要是\n标点符号。。"},model:{value:t.show3,callback:function(o){t.show3=o},expression:"show3"}},[s("div",{staticClass:"dialog-customer-footer",attrs:{slot:"footer"},slot:"footer"},[s("a",{on:{click:function(o){o.stopPropagation(),t.show3=!1}}},[t._v("取消")]),s("a",{on:{click:function(o){o.stopPropagation(),t.show3=!1}}},[t._v("确定")])])]),s("fs-dialog",{attrs:{align:"left",type:"alert",title:"自定义footer",message:"描述文字的字数尽量控制在三行\n内，并且单行最右侧尽量不要是\n标点符号。。"},model:{value:t.show4,callback:function(o){t.show4=o},expression:"show4"}},[s("div",{staticClass:"dialog-customer-footer",attrs:{slot:"footer"},slot:"footer"},[s("a",{on:{click:function(o){o.stopPropagation(),t.show4=!1}}},[t._v("确定")])])]),s("fs-group",{attrs:{title:"自定义footer"}},[s("fs-button",{on:{click:function(o){t.show3=!0}}},[t._v("消息确认")]),s("fs-button",{staticClass:"mgl15",on:{click:function(o){t.show4=!0}}},[t._v("消息提示")])],1)],1)};n._withStripped=!0;var i={name:"index",data:function(){return{show:!1,show2:!1,show3:!1,show4:!1,val2:"",val3:""}},methods:{dialog:function(t){this.$dialog(t).then(function(t){console.log("我确定了")}).catch(function(t){console.log("我取消了")})},highDialog:function(){this.show=!0},prefixDialog:function(){this.show2=!0}}},l=(s(94),s(1)),a=Object(l.a)(i,n,[],!1,null,null,null);a.options.__file="packages/dialog/demo/index.vue";o.default=a.exports},57:function(t,o,s){var n=s(95);"string"==typeof n&&(n=[[t.i,n,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};s(17)(n,i);n.locals&&(t.exports=n.locals)},94:function(t,o,s){"use strict";var n=s(57);s.n(n).a},95:function(t,o,s){(t.exports=s(13)(!1)).push([t.i,"\n.mgl15 {\n  margin-left: 15px;\n}\n.dialog-prefix {\n  margin: 20px;\n}\n.dialog-close {\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  display: inline-block;\n  padding: 6px;\n  color: #999;\n  font-size: 18px;\n}\n.dialog-customer-footer {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-pack: end;\n  -webkit-justify-content: flex-end;\n          justify-content: flex-end;\n  width: 100%;\n}\n.dialog-customer-footer a {\n  margin-right: 25px;\n  color: #e83e43;\n  font-size: 18px;\n}\n",""])}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,