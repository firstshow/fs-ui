(this.webpackJsonpfsui=this.webpackJsonpfsui||[]).push([[15],{112:function(t,n,o){"use strict";var e=o(66);o.n(e).a},113:function(t,n,o){(t.exports=o(13)(!1)).push([t.i,"button[data-v-5d33b729] {\n  margin-right: 5px;\n  margin-bottom: 5px;\n}\n",""])},127:function(t,n,o){"use strict";o.r(n);var e=function(){var t=this,n=t.$createElement,o=t._self._c||n;return o("div",[o("fs-group",{attrs:{title:"通知类型"}},[o("div",{staticClass:"button-box"},[o("fs-button",{on:{click:function(n){t.notice({type:"default",message:"默认"})}}},[t._v("默认")]),o("fs-button",{on:{click:function(n){t.notice({type:"success",message:"成功"})}}},[t._v("成功")]),o("fs-button",{on:{click:function(n){t.notice({type:"fail",message:"失败"})}}},[t._v("失败")]),o("fs-button",{on:{click:function(n){t.notice({type:"warning",message:"警示"})}}},[t._v("警示")]),o("fs-button",{on:{click:function(n){t.notice({message:"自定义",background:"bisque",color:"red",duration:"5000"})}}},[t._v("自定义")])],1)])],1)};e._withStripped=!0;var i=o(18),s={name:"index",methods:{notice:function(t){Object(i.a)(t)}}},c=(o(112),o(1)),a=Object(c.a)(s,e,[],!1,null,"5d33b729",null);a.options.__file="packages/notice/demo/index.vue";n.default=a.exports},66:function(t,n,o){var e=o(113);"string"==typeof e&&(e=[[t.i,e,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};o(17)(e,i);e.locals&&(t.exports=e.locals)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,