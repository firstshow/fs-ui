(this.webpackJsonpfsui=this.webpackJsonpfsui||[]).push([[28],{144:function(e,n,s){"use strict";s.r(n);var a=function(){var e=this,n=e.$createElement,s=e._self._c||n;return s("div",[s("fs-group",{attrs:{title:"选择地区"}},[s("fs-input",{attrs:{placeholder:"请选择地区",type:"search"},on:{"on-search":function(n){e.show1=!0}},model:{value:e.formatAddress1,callback:function(n){e.formatAddress1=n},expression:"formatAddress1"}}),s("fs-linkage",{attrs:{data:e.currentData1,show:e.show1},on:{"update:show":function(n){e.show1=n},"change-select":e.requestAddress1},model:{value:e.address1,callback:function(n){e.address1=n},expression:"address1"}})],1),s("fs-group",{attrs:{title:"带初始值"}},[s("fs-input",{attrs:{placeholder:"请选择地区",type:"search"},on:{"on-search":function(n){e.show2=!0}},model:{value:e.formatAddress2,callback:function(n){e.formatAddress2=n},expression:"formatAddress2"}}),s("fs-linkage",{attrs:{data:e.currentData2,show:e.show2},on:{"update:show":function(n){e.show2=n},"change-select":e.requestAddress2},model:{value:e.address2,callback:function(n){e.address2=n},expression:"address2"}})],1)],1)};a._withStripped=!0;var t=function(e){return new Promise(function(n,s){setTimeout(function(){0===e&&n([{name:"吉林省",code:"110000"},{name:"湖北省",code:"120000"},{name:"浙江省",code:"130000"},{name:"甘肃省",code:"140000"},{name:"海南省",code:"150000"},{name:"湖南",code:"160000"},{name:"黑龙江",code:"170000"},{name:"新疆",code:"180000"},{name:"西藏",code:"190000"},{name:"青海省",code:"200000"},{name:"广东省",code:"210000"},{name:"广西省",code:"220000"},{name:"安徽省",code:"230000"},{name:"辽宁省",code:"240000"},{name:"河北省",code:"250000"}]),1===e&&n([{name:"长春市",code:"100100"},{name:"武汉市",code:"110100"},{name:"天水市",code:"120100"},{name:"杭州市",code:"120100"},{name:"兰州市",code:"140100"}]),2===e&&n([{name:"九台区",code:"100101"},{name:"泗水县",code:"110101"},{name:"黄梅县",code:"120101"},{name:"西湖区",code:"130101"},{name:"余杭区",code:"140101"}]),3===e&&n([])},400)})},d={data:function(){return{address1:[],address2:[{id:"220000",name:"吉林省"},{id:"220100",name:"长春市"},{id:"220113",name:"九台区"}],currentData1:[],currentData2:[],show1:!1,show2:!1}},computed:{formatAddress1:function(){return this.address1&&this.address1.length?this.address1.map(function(e){return e.name}).join("/"):""},formatAddress2:function(){return this.address2&&this.address2.length?this.address2.map(function(e){return e.name}).join("/"):""}},methods:{requestAddress1:function(e){var n=this,s=e.len;e.id;t(parseInt(s)).then(function(e){n.currentData1=e})},requestAddress2:function(e){var n=this,s=e.len;e.id;t(parseInt(s)).then(function(e){n.currentData2=e})}}},o=s(1),r=Object(o.a)(d,a,[],!1,null,null,null);r.options.__file="packages/linkage/demo/index.vue";n.default=r.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mc3VpLy4vcGFja2FnZXMvbGlua2FnZS9kZW1vL2luZGV4LnZ1ZT8xMDA1Iiwid2VicGFjazovL2ZzdWkvcGFja2FnZXMvbGlua2FnZS9kZW1vL2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly9mc3VpLy4vcGFja2FnZXMvbGlua2FnZS9kZW1vL2luZGV4LnZ1ZT9jMGI2Iiwid2VicGFjazovL2ZzdWkvLi9wYWNrYWdlcy9saW5rYWdlL2RlbW8vaW5kZXgudnVlIl0sIm5hbWVzIjpbInJlbmRlciIsIl92bSIsInRoaXMiLCJfaCIsIiRjcmVhdGVFbGVtZW50IiwiX2MiLCJfc2VsZiIsImF0dHJzIiwidGl0bGUiLCJwbGFjZWhvbGRlciIsInR5cGUiLCJvbiIsIm9uLXNlYXJjaCIsIiRldmVudCIsInNob3cxIiwibW9kZWwiLCJ2YWx1ZSIsImZvcm1hdEFkZHJlc3MxIiwiY2FsbGJhY2siLCIkJHYiLCJleHByZXNzaW9uIiwiZGF0YSIsImN1cnJlbnREYXRhMSIsInNob3ciLCJ1cGRhdGU6c2hvdyIsImNoYW5nZS1zZWxlY3QiLCJyZXF1ZXN0QWRkcmVzczEiLCJhZGRyZXNzMSIsInNob3cyIiwiZm9ybWF0QWRkcmVzczIiLCJjdXJyZW50RGF0YTIiLCJyZXF1ZXN0QWRkcmVzczIiLCJhZGRyZXNzMiIsIl93aXRoU3RyaXBwZWQiLCJtb2NrRGF0YSIsImxlbiIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0Iiwic2V0VGltZW91dCIsIm5hbWUiLCJjb2RlIiwibGlua2FnZV9kZW1vdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfIiwiaWQiLCJjb21wdXRlZCIsImxlbmd0aCIsIm1hcCIsInYiLCJqb2luIiwibWV0aG9kcyIsIl9yZWYiLCJfdGhpcyIsInBhcnNlSW50IiwidGhlbiIsIl9yZWYyIiwiX3RoaXMyIiwiY29tcG9uZW50IiwiT2JqZWN0IiwiY29tcG9uZW50Tm9ybWFsaXplciIsIm9wdGlvbnMiLCJfX2ZpbGUiLCJfX3dlYnBhY2tfZXhw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QUEsWUFLQSxJQUFBTixHQUFBRSxFQUFBLEtBQ0EsUUM3RzJMSyxFRGdIM0wsQ0FDQXJCLEtBREEsV0FFQSxPQUNBTSxTQUFBLEdBQ0FLLFNBQUEsRUFDQVcsR0FBQSxTQUNBSCxLQUFBLE9BQ0EsQ0FDQUcsR0FBQSxTQUNBSCxLQUFBLE9BQ0EsQ0FDQUcsR0FBQSxTQUNBSCxLQUFBLFFBRUFsQixhQUFBLEdBQ0FRLGFBQUEsR0FDQWhCLE9BQUEsRUFDQWMsT0FBQSxJQUdBZ0IsU0FBQSxDQUNBM0IsZUFEQSxXQUVBLE9BQUFmLEtBQUF5QixVQUFBekIsS0FBQXlCLFNBQUFrQixPQUFBM0MsS0FBQXlCLFNBQUFtQixJQUFBLFNBQUFDLEdBQUEsT0FBQUEsRUFBQVAsT0FBQVEsS0FBQSxTQUVBbkIsZUFKQSxXQUtBLE9BQUEzQixLQUFBOEIsVUFBQTlCLEtBQUE4QixTQUFBYSxPQUFBM0MsS0FBQThCLFNBQUFjLElBQUEsU0FBQUMsR0FBQSxPQUFBQSxFQUFBUCxPQUFBUSxLQUFBLFVBR0FDLFFBQUEsQ0FJQXZCLGdCQUpBLFNBQUF3QixHQUlBLElBQUFDLEVBQUFqRCxLQUFBaUMsRUFBQWUsRUFBQWYsSUFBQWUsRUFBQVAsR0FDQVQsRUFBQWtCLFNBQUFqQixJQUFBa0IsS0FBQSxTQUFBaEMsR0FDQThCLEVBQUE3QixhQUFBRCxLQUdBVSxnQkFUQSxTQUFBdUIsR0FTQSxJQUFBQyxFQUFBckQsS0FBQWlDLEVBQUFtQixFQUFBbkIsSUFBQW1CLEVBQUFYLEdBQ0FULEVBQUFrQixTQUFBakIsSUFBQWtCLEtBQUEsU0FBQWhDLEdBQ0FrQyxFQUFBekIsYUFBQVQsY0VoSkFtQyxFQUFnQkMsT0FBQUMsRUFBQSxFQUFBRCxDQUNkZixFQUNBMUMsRUg4RUYsSUc1RUEsRUFDQSxLQUNBLEtBQ0EsTUF1QkF3RCxFQUFBRyxRQUFBQyxPQUFBLGtDQUNlQyxFQUFBLFFBQUFMIiwiZmlsZSI6ImFzeW5jXzI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gIHJldHVybiBfYyhcbiAgICBcImRpdlwiLFxuICAgIFtcbiAgICAgIF9jKFxuICAgICAgICBcImZzLWdyb3VwXCIsXG4gICAgICAgIHsgYXR0cnM6IHsgdGl0bGU6IFwi6YCJ5oup5Zyw5Yy6XCIgfSB9LFxuICAgICAgICBbXG4gICAgICAgICAgX2MoXCJmcy1pbnB1dFwiLCB7XG4gICAgICAgICAgICBhdHRyczogeyBwbGFjZWhvbGRlcjogXCLor7fpgInmi6nlnLDljLpcIiwgdHlwZTogXCJzZWFyY2hcIiB9LFxuICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgXCJvbi1zZWFyY2hcIjogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgX3ZtLnNob3cxID0gdHJ1ZVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbW9kZWw6IHtcbiAgICAgICAgICAgICAgdmFsdWU6IF92bS5mb3JtYXRBZGRyZXNzMSxcbiAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikge1xuICAgICAgICAgICAgICAgIF92bS5mb3JtYXRBZGRyZXNzMSA9ICQkdlxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBleHByZXNzaW9uOiBcImZvcm1hdEFkZHJlc3MxXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSxcbiAgICAgICAgICBfYyhcImZzLWxpbmthZ2VcIiwge1xuICAgICAgICAgICAgYXR0cnM6IHsgZGF0YTogX3ZtLmN1cnJlbnREYXRhMSwgc2hvdzogX3ZtLnNob3cxIH0sXG4gICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICBcInVwZGF0ZTpzaG93XCI6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgIF92bS5zaG93MSA9ICRldmVudFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBcImNoYW5nZS1zZWxlY3RcIjogX3ZtLnJlcXVlc3RBZGRyZXNzMVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG1vZGVsOiB7XG4gICAgICAgICAgICAgIHZhbHVlOiBfdm0uYWRkcmVzczEsXG4gICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHtcbiAgICAgICAgICAgICAgICBfdm0uYWRkcmVzczEgPSAkJHZcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgZXhwcmVzc2lvbjogXCJhZGRyZXNzMVwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgICAgXSxcbiAgICAgICAgMVxuICAgICAgKSxcbiAgICAgIF9jKFxuICAgICAgICBcImZzLWdyb3VwXCIsXG4gICAgICAgIHsgYXR0cnM6IHsgdGl0bGU6IFwi5bim5Yid5aeL5YC8XCIgfSB9LFxuICAgICAgICBbXG4gICAgICAgICAgX2MoXCJmcy1pbnB1dFwiLCB7XG4gICAgICAgICAgICBhdHRyczogeyBwbGFjZWhvbGRlcjogXCLor7fpgInmi6nlnLDljLpcIiwgdHlwZTogXCJzZWFyY2hcIiB9LFxuICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgXCJvbi1zZWFyY2hcIjogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgX3ZtLnNob3cyID0gdHJ1ZVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbW9kZWw6IHtcbiAgICAgICAgICAgICAgdmFsdWU6IF92bS5mb3JtYXRBZGRyZXNzMixcbiAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikge1xuICAgICAgICAgICAgICAgIF92bS5mb3JtYXRBZGRyZXNzMiA9ICQkdlxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBleHByZXNzaW9uOiBcImZvcm1hdEFkZHJlc3MyXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSxcbiAgICAgICAgICBfYyhcImZzLWxpbmthZ2VcIiwge1xuICAgICAgICAgICAgYXR0cnM6IHsgZGF0YTogX3ZtLmN1cnJlbnREYXRhMiwgc2hvdzogX3ZtLnNob3cyIH0sXG4gICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICBcInVwZGF0ZTpzaG93XCI6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgIF92bS5zaG93MiA9ICRldmVudFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBcImNoYW5nZS1zZWxlY3RcIjogX3ZtLnJlcXVlc3RBZGRyZXNzMlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG1vZGVsOiB7XG4gICAgICAgICAgICAgIHZhbHVlOiBfdm0uYWRkcmVzczIsXG4gICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHtcbiAgICAgICAgICAgICAgICBfdm0uYWRkcmVzczIgPSAkJHZcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgZXhwcmVzc2lvbjogXCJhZGRyZXNzMlwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgICAgXSxcbiAgICAgICAgMVxuICAgICAgKVxuICAgIF0sXG4gICAgMVxuICApXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiPHRlbXBsYXRlPlxuICA8ZGl2PlxuICAgIDxmcy1ncm91cCB0aXRsZT1cIumAieaLqeWcsOWMulwiPlxuICAgICAgPGZzLWlucHV0IHBsYWNlaG9sZGVyPVwi6K+36YCJ5oup5Zyw5Yy6XCIgdHlwZT1cInNlYXJjaFwiIEBvbi1zZWFyY2g9XCJzaG93MSA9IHRydWVcIiB2LW1vZGVsPVwiZm9ybWF0QWRkcmVzczFcIi8+XG4gICAgICA8ZnMtbGlua2FnZVxuICAgICAgICA6ZGF0YT1cImN1cnJlbnREYXRhMVwiXG4gICAgICAgIHYtbW9kZWw9XCJhZGRyZXNzMVwiXG4gICAgICAgIDpzaG93LnN5bmM9XCJzaG93MVwiXG4gICAgICAgIEBjaGFuZ2Utc2VsZWN0PVwicmVxdWVzdEFkZHJlc3MxXCI+XG4gICAgICA8L2ZzLWxpbmthZ2U+XG4gICAgPC9mcy1ncm91cD5cbiAgICA8ZnMtZ3JvdXAgdGl0bGU9XCLluKbliJ3lp4vlgLxcIj5cbiAgICAgIDxmcy1pbnB1dCBwbGFjZWhvbGRlcj1cIuivt+mAieaLqeWcsOWMulwiIHR5cGU9XCJzZWFyY2hcIiBAb24tc2VhcmNoPVwic2hvdzIgPSB0cnVlXCIgdi1tb2RlbD1cImZvcm1hdEFkZHJlc3MyXCIvPlxuICAgICAgPGZzLWxpbmthZ2VcbiAgICAgICAgOmRhdGE9XCJjdXJyZW50RGF0YTJcIlxuICAgICAgICB2LW1vZGVsPVwiYWRkcmVzczJcIlxuICAgICAgICA6c2hvdy5zeW5jPVwic2hvdzJcIlxuICAgICAgICBAY2hhbmdlLXNlbGVjdD1cInJlcXVlc3RBZGRyZXNzMlwiPlxuICAgICAgPC9mcy1saW5rYWdlPlxuICAgIDwvZnMtZ3JvdXA+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmxldCBtb2NrRGF0YSA9IChsZW4pID0+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGxldCBwcm92aW5jZSA9IFt7XG4gICAgICAgIG5hbWU6ICflkInmnpfnnIEnLFxuICAgICAgICBjb2RlOiAnMTEwMDAwJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAn5rmW5YyX55yBJyxcbiAgICAgICAgY29kZTogJzEyMDAwMCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ+a1meaxn+ecgScsXG4gICAgICAgIGNvZGU6ICcxMzAwMDAnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICfnlJjogoPnnIEnLFxuICAgICAgICBjb2RlOiAnMTQwMDAwJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAn5rW35Y2X55yBJyxcbiAgICAgICAgY29kZTogJzE1MDAwMCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ+a5luWNlycsXG4gICAgICAgIGNvZGU6ICcxNjAwMDAnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICfpu5HpvpnmsZ8nLFxuICAgICAgICBjb2RlOiAnMTcwMDAwJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAn5paw55aGJyxcbiAgICAgICAgY29kZTogJzE4MDAwMCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ+ilv+iXjycsXG4gICAgICAgIGNvZGU6ICcxOTAwMDAnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICfpnZLmtbfnnIEnLFxuICAgICAgICBjb2RlOiAnMjAwMDAwJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAn5bm/5Lic55yBJyxcbiAgICAgICAgY29kZTogJzIxMDAwMCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ+W5v+ilv+ecgScsXG4gICAgICAgIGNvZGU6ICcyMjAwMDAnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICflronlvr3nnIEnLFxuICAgICAgICBjb2RlOiAnMjMwMDAwJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAn6L695a6B55yBJyxcbiAgICAgICAgY29kZTogJzI0MDAwMCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ+ays+WMl+ecgScsXG4gICAgICAgIGNvZGU6ICcyNTAwMDAnXG4gICAgICB9XVxuICAgICAgbGV0IGNpdHkgPSBbe1xuICAgICAgICBuYW1lOiAn6ZW/5pil5biCJyxcbiAgICAgICAgY29kZTogJzEwMDEwMCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ+atpuaxieW4gicsXG4gICAgICAgIGNvZGU6ICcxMTAxMDAnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICflpKnmsLTluIInLFxuICAgICAgICBjb2RlOiAnMTIwMTAwJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAn5p2t5bee5biCJyxcbiAgICAgICAgY29kZTogJzEyMDEwMCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ+WFsOW3nuW4gicsXG4gICAgICAgIGNvZGU6ICcxNDAxMDAnXG4gICAgICB9XVxuICAgICAgbGV0IGNvdW50cnkgPSBbe1xuICAgICAgICBuYW1lOiAn5Lmd5Y+w5Yy6JyxcbiAgICAgICAgY29kZTogJzEwMDEwMSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ+azl+awtOWOvycsXG4gICAgICAgIGNvZGU6ICcxMTAxMDEnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICfpu4TmooXljr8nLFxuICAgICAgICBjb2RlOiAnMTIwMTAxJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAn6KW/5rmW5Yy6JyxcbiAgICAgICAgY29kZTogJzEzMDEwMSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ+S9meadreWMuicsXG4gICAgICAgIGNvZGU6ICcxNDAxMDEnXG4gICAgICB9XVxuICAgICAgbGVuID09PSAwICYmIHJlc29sdmUocHJvdmluY2UpXG4gICAgICBsZW4gPT09IDEgJiYgcmVzb2x2ZShjaXR5KVxuICAgICAgbGVuID09PSAyICYmIHJlc29sdmUoY291bnRyeSlcbiAgICAgIGxlbiA9PT0gMyAmJiByZXNvbHZlKFtdKVxuICAgIH0sIDQwMClcbiAgfSlcbn1cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZGF0YSAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFkZHJlc3MxOiBbXSwgLy8g5b2T5YmN6YCJ5oup55qE5pWw5o2uXG4gICAgICBhZGRyZXNzMjogW3tcbiAgICAgICAgaWQ6ICcyMjAwMDAnLFxuICAgICAgICBuYW1lOiAn5ZCJ5p6X55yBJ1xuICAgICAgfSwge1xuICAgICAgICBpZDogJzIyMDEwMCcsXG4gICAgICAgIG5hbWU6ICfplb/mmKXluIInXG4gICAgICB9LCB7XG4gICAgICAgIGlkOiAnMjIwMTEzJyxcbiAgICAgICAgbmFtZTogJ+S5neWPsOWMuidcbiAgICAgIH1dLCAvLyDlvZPliY3pgInmi6nnmoTmlbDmja5cbiAgICAgIGN1cnJlbnREYXRhMTogW10sIC8vIOW9k+WJjeiOt+WPlueahOaVsOaNrlxuICAgICAgY3VycmVudERhdGEyOiBbXSwgLy8g5b2T5YmN6I635Y+W55qE5pWw5o2uXG4gICAgICBzaG93MTogZmFsc2UsIC8vIOaYr+WQpuaYvuekulxuICAgICAgc2hvdzI6IGZhbHNlIC8vIOaYr+WQpuaYvuekulxuICAgIH1cbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBmb3JtYXRBZGRyZXNzMSAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5hZGRyZXNzMSAmJiB0aGlzLmFkZHJlc3MxLmxlbmd0aCA/IHRoaXMuYWRkcmVzczEubWFwKHYgPT4gdi5uYW1lKS5qb2luKCcvJykgOiAnJ1xuICAgIH0sXG4gICAgZm9ybWF0QWRkcmVzczIgKCkge1xuICAgICAgcmV0dXJuIHRoaXMuYWRkcmVzczIgJiYgdGhpcy5hZGRyZXNzMi5sZW5ndGggPyB0aGlzLmFkZHJlc3MyLm1hcCh2ID0+IHYubmFtZSkuam9pbignLycpIDogJydcbiAgICB9XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICAvKipcbiAgICAgKiDmoLnmja7lvZPliY3lnLDlnYDojrflj5bkuIvkuIDkuKrlnLDlnYDmlbDmja5cbiAgICAgKi9cbiAgICByZXF1ZXN0QWRkcmVzczEgKHsgbGVuLCBpZCB9KSB7XG4gICAgICBtb2NrRGF0YShwYXJzZUludChsZW4pKS50aGVuKGRhdGEgPT4ge1xuICAgICAgICB0aGlzLmN1cnJlbnREYXRhMSA9IGRhdGFcbiAgICAgIH0pXG4gICAgfSxcbiAgICByZXF1ZXN0QWRkcmVzczIgKHsgbGVuLCBpZCB9KSB7XG4gICAgICBtb2NrRGF0YShwYXJzZUludChsZW4pKS50aGVuKGRhdGEgPT4ge1xuICAgICAgICB0aGlzLmN1cnJlbnREYXRhMiA9IGRhdGFcbiAgICAgIH0pXG4gICAgfVxuICB9XG59XG48L3NjcmlwdD5cbiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1mODBlYzMxOCZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiL1VzZXJzL3dhbmdndWFud2VpL0Rlc2t0b3AvcHJvamVjdC9mcy11aS9ub2RlX21vZHVsZXMvdnVlLWhvdC1yZWxvYWQtYXBpL2Rpc3QvaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnZjgwZWMzMTgnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnZjgwZWMzMTgnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1mODBlYzMxOCZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCdmODBlYzMxOCcsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwicGFja2FnZXMvbGlua2FnZS9kZW1vL2luZGV4LnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=