(this.webpackJsonpfsui=this.webpackJsonpfsui||[]).push([[32],{137:function(e,t,a){"use strict";a.r(t);var n=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("fs-group",{attrs:{title:"简单"}},[a("fs-pagination",{attrs:{total:e.total,"page-size":e.pageSize,simple:""},model:{value:e.currentPage,callback:function(t){e.currentPage=t},expression:"currentPage"}})],1),a("fs-group",{attrs:{title:"复杂"}},[a("fs-pagination",{attrs:{total:e.total,"page-size":e.pageSize,"current-change":e.handleChange,"page-range":2,background:""},model:{value:e.currentPage,callback:function(t){e.currentPage=t},expression:"currentPage"}})],1),a("fs-group",{attrs:{title:"复杂无背景"}},[a("fs-pagination",{attrs:{total:e.total,"page-size":e.pageSize,"current-change":e.handleChange,background:!1},model:{value:e.currentPage,callback:function(t){e.currentPage=t},expression:"currentPage"}})],1)],1)};n._withStripped=!0;var r={data:function(){return{total:40,pageSize:5,currentPage:1}},methods:{handleChange:function(e){}}},i=a(1),u=Object(i.a)(r,n,[],!1,null,null,null);u.options.__file="packages/pagination/demo/index.vue";t.default=u.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,