(this.webpackJsonpfsui=this.webpackJsonpfsui||[]).push([[14],{150:function(t,i,s){"use strict";s.r(i);var r=function(){var t=this.$createElement,i=this._self._c||t;return i("div",{staticClass:"loading-demo"},[i("fs-group",{attrs:{title:"基本loading"}},[i("fs-grid",{attrs:{clos:3}},[i("fs-grid-item",[i("fs-loading")],1),i("fs-grid-item",[i("fs-loading",{attrs:{type:"circular"}})],1),i("fs-grid-item",[i("fs-loading",{attrs:{type:"spinner"}})],1)],1)],1),i("fs-group",{attrs:{title:"带背景的loading"}},[i("fs-grid",{attrs:{clos:3}},[i("fs-grid-item",[i("fs-loading",{attrs:{color:"white"}})],1),i("fs-grid-item",[i("fs-loading",{attrs:{type:"circular",color:"white"}})],1),i("fs-grid-item",[i("fs-loading",{attrs:{type:"spinner",color:"white"}})],1)],1)],1),i("fs-group",{attrs:{title:"改变大小的loading"}},[i("fs-grid",{attrs:{clos:3}},[i("fs-grid-item",[i("fs-loading",{attrs:{size:"30px"}})],1),i("fs-grid-item",[i("fs-loading",{attrs:{type:"circular",size:"30px"}})],1),i("fs-grid-item",[i("fs-loading",{attrs:{type:"spinner",size:"30px"}})],1),i("fs-grid-item",[i("fs-loading",{attrs:{size:"30px",color:"white"}})],1),i("fs-grid-item",[i("fs-loading",{attrs:{type:"circular",size:"30px",color:"white"}})],1),i("fs-grid-item",[i("fs-loading",{attrs:{type:"spinner",size:"30px",color:"white"}})],1)],1)],1),i("fs-group",{attrs:{title:"带文字的loading"}},[i("fs-grid",{attrs:{clos:3}},[i("fs-grid-item",[i("fs-loading",{attrs:{color:"white",text:"加载中..."}})],1),i("fs-grid-item",[i("fs-loading",{attrs:{color:"white",type:"circular",text:"加载中..."}})],1),i("fs-grid-item",[i("fs-loading",{attrs:{color:"white",type:"spinner",text:"加载中..."}})],1)],1)],1),i("fs-group",{attrs:{title:"自定义类名"}},[i("fs-loading",{attrs:{className:"self-loading"}})],1),i("fs-group",{attrs:{title:"自定义内容"}},[i("fs-grid",{attrs:{clos:2}},[i("fs-grid-item",[i("fs-loading",[i("div",{attrs:{slot:"content"},slot:"content"},[this._v("loading")])])],1),i("fs-grid-item",[i("fs-loading",[i("div",{attrs:{slot:"loading"},slot:"loading"},[i("span",[this._v("loading")])])])],1),i("fs-grid-item",[i("fs-loading",{attrs:{color:"white",text:"加载中..."}},[i("div",{attrs:{slot:"loading"},slot:"loading"},[i("p",{staticStyle:{color:"white",margin:"0"}},[this._v("图片")])])])],1),i("fs-grid-item",[i("fs-loading",{attrs:{color:"white",text:"加载中..."}},[i("div",{attrs:{slot:"loading"},slot:"loading"},[i("span",{staticStyle:{color:"white"}},[this._v("图片")])])])],1)],1)],1)],1)};r._withStripped=!0;var o={name:"loading-demo",methods:{setLoading:function(t){console.log(t)}}},a=(s(89),s(1)),e=Object(a.a)(o,r,[],!1,null,"edf4a1c6",null);e.options.__file="packages/loading/demo/index.vue";i.default=e.exports},54:function(t,i,s){var r=s(90);"string"==typeof r&&(r=[[t.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};s(17)(r,o);r.locals&&(t.exports=r.locals)},89:function(t,i,s){"use strict";var r=s(54);s.n(r).a},90:function(t,i,s){(t.exports=s(13)(!1)).push([t.i,".loading-demo .fs-grid[data-v-edf4a1c6]::after,\n.loading-demo .fs-grid-item[data-v-edf4a1c6]::after {\n  border: none;\n}\n",""])}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,