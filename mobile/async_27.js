(this.webpackJsonpfsui=this.webpackJsonpfsui||[]).push([[27],{221:function(e,n,s){"use strict";s.r(n);var a=function(){var e=this,n=e.$createElement,s=e._self._c||n;return s("div",[s("fs-group",{attrs:{title:"选择地区"}},[s("fs-input",{attrs:{placeholder:"请选择地区",type:"search"},on:{"on-search":function(n){e.show1=!0}},model:{value:e.formatAddress1,callback:function(n){e.formatAddress1=n},expression:"formatAddress1"}}),s("fs-linkage",{attrs:{data:e.currentData1,show:e.show1},on:{"update:show":function(n){e.show1=n},"change-select":e.requestAddress1},model:{value:e.address1,callback:function(n){e.address1=n},expression:"address1"}})],1),s("fs-group",{attrs:{title:"带初始值"}},[s("fs-input",{attrs:{placeholder:"请选择地区",type:"search"},on:{"on-search":function(n){e.show2=!0}},model:{value:e.formatAddress2,callback:function(n){e.formatAddress2=n},expression:"formatAddress2"}}),s("fs-linkage",{attrs:{data:e.currentData2,show:e.show2},on:{"update:show":function(n){e.show2=n},"change-select":e.requestAddress2},model:{value:e.address2,callback:function(n){e.address2=n},expression:"address2"}})],1)],1)};a._withStripped=!0;var t=function(e){return new Promise(function(n,s){setTimeout(function(){0===e&&n([{name:"吉林省",code:"110000"},{name:"湖北省",code:"120000"},{name:"浙江省",code:"130000"},{name:"甘肃省",code:"140000"},{name:"海南省",code:"150000"},{name:"湖南",code:"160000"},{name:"黑龙江",code:"170000"},{name:"新疆",code:"180000"},{name:"西藏",code:"190000"},{name:"青海省",code:"200000"},{name:"广东省",code:"210000"},{name:"广西省",code:"220000"},{name:"安徽省",code:"230000"},{name:"辽宁省",code:"240000"},{name:"河北省",code:"250000"}]),1===e&&n([{name:"长春市",code:"100100"},{name:"武汉市",code:"110100"},{name:"天水市",code:"120100"},{name:"杭州市",code:"120100"},{name:"兰州市",code:"140100"}]),2===e&&n([{name:"九台区",code:"100101"},{name:"泗水县",code:"110101"},{name:"黄梅县",code:"120101"},{name:"西湖区",code:"130101"},{name:"余杭区",code:"140101"}]),3===e&&n([])},400)})},d={data:function(){return{address1:[],address2:[{id:"220000",name:"吉林省"},{id:"220100",name:"长春市"},{id:"220113",name:"九台区"}],currentData1:[],currentData2:[],show1:!1,show2:!1}},computed:{formatAddress1:function(){return this.address1&&this.address1.length?this.address1.map(function(e){return e.name}).join("/"):""},formatAddress2:function(){return this.address2&&this.address2.length?this.address2.map(function(e){return e.name}).join("/"):""}},methods:{requestAddress1:function(e){var n=this,s=e.len;e.id;t(parseInt(s)).then(function(e){n.currentData1=e})},requestAddress2:function(e){var n=this,s=e.len;e.id;t(parseInt(s)).then(function(e){n.currentData2=e})}}},o=s(1),r=Object(o.a)(d,a,[],!1,null,null,null);r.options.__file="packages/linkage/demo/index.vue";n.default=r.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,