(this.webpackJsonpfsui=this.webpackJsonpfsui||[]).push([[9],{122:function(t,a,l){var e=l(141);"string"==typeof e&&(e=[[t.i,e,""]]);var s={hmr:!0,transform:void 0,insertInto:void 0};l(40)(e,s);e.locals&&(t.exports=e.locals)},140:function(t,a,l){"use strict";var e=l(122);l.n(e).a},141:function(t,a,l){(t.exports=l(39)(!1)).push([t.i,"\n.text-red[data-v-5d0bc5cf] {\n  color: #e83e43;\n}\n",""])},168:function(t,a,l){"use strict";l.r(a);var e=function(){var t=this,a=t.$createElement,l=t._self._c||a;return l("div",[l("fs-group",{attrs:{title:"基础"}},[l("fs-input",{attrs:{placeholder:"请输入",align:"left",clearable:""}})],1),l("fs-group",{attrs:{title:"禁用"}},[l("fs-input",{attrs:{placeholder:"请输入",align:"left",disabled:""}})],1),l("fs-group",{attrs:{title:"搜索"}},[l("fs-input",{attrs:{placeholder:"请输入名称",align:"left",type:"search"},model:{value:t.val1,callback:function(a){t.val1=a},expression:"val1"}})],1),l("fs-group",{attrs:{title:"自定义标签"}},[l("fs-input",{attrs:{label:"姓名",prefixIcon:"user",clearable:"",placeholder:"请输入姓名"},model:{value:t.val2,callback:function(a){t.val2=a},expression:"val2"}}),l("fs-input",{attrs:{label:"用户名",placeholder:"请输入用户名"},model:{value:t.val3,callback:function(a){t.val3=a},expression:"val3"}},[l("span",{staticClass:"fs-input-prefix",attrs:{slot:"prefix"},slot:"prefix"},[l("i",{staticClass:"text-red"},[t._v("*")])])])],1),l("fs-group",{attrs:{title:"密码"}},[l("fs-input",{attrs:{label:"密码",type:"password",placeholder:"请输入密码"},model:{value:t.val4,callback:function(a){t.val4=a},expression:"val4"}}),l("fs-input",{attrs:{type:"password",viewPassword:!0,placeholder:"请输入密码"},model:{value:t.val5,callback:function(a){t.val5=a},expression:"val5"}})],1),l("fs-group",{attrs:{title:"文本框"}},[l("fs-input",{attrs:{placeholder:"请输入名称",type:"textarea",rows:1},model:{value:t.val6,callback:function(a){t.val6=a},expression:"val6"}})],1)],1)};e._withStripped=!0;var s={data:function(){return{val1:"",val2:"",val3:"",val4:"",val5:"",val6:""}}},r=(l(140),l(0)),i=Object(r.a)(s,e,[],!1,null,"5d0bc5cf",null);i.options.__file="packages/input/demo/index.vue";a.default=i.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,